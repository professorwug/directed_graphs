# AUTOGENERATED! DO NOT EDIT! File to edit: 05c05 Diffusion Distance based Loss - Tests and Visualizations.ipynb (unless otherwise specified).

__all__ = ['DiffusionDistanceFlowEmbedder']

# Cell
from .multiscale_flow_embedder import MultiscaleDiffusionFlowEmbedder
from .flow_embedding_training_utils import FETrainer, visualize_points, save_embedding_visualization
class DiffusionDistanceFlowEmbedder(FETrainer):
    def __init__(self, X, flows, labels, device = device):
        super().__init__(X, flows, labels, device = device)
        self.vizfiz = [
            save_embedding_visualization,
            visualize_points,
        ]
        loss_weights = {
            "diffusion":0,
            "smoothness":0,
            "reconstruction":0,
            "diffusion map regularization":1,
            "flow cosine loss": 1,
        }
        self.FE = MultiscaleDiffusionFlowEmbedder(
            X = X,
            flows = flows,
            sigma_graph = 1,
            flow_strength_graph = 1,
            device = device,
            use_embedding_grid = False,
        ).to(device)
        self.title = "Diffusion Distance FE"
