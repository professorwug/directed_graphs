# AUTOGENERATED! DO NOT EDIT! File to edit: 01_Diffusion Curvature of Directed Graphs.ipynb (unless otherwise specified).

__all__ = ['diffusion_curvature']

# Cell
from .differentiable_laziness import curvature
from .utils import diffusion_matrix_from_graph
import warnings
def diffusion_curvature(G = None, t = 8, A = None):
  """Computes diffusion curvature of graph (or raw adjacency matrix), with tunable parameter t"""
  assert (G is not None) or (A is not None)
  if G is not None:
    P = diffusion_matrix_from_graph(G)
  if A is not None:
    P = diffusion_matrix_from_graph(A)
  ks = curvature(P,t = t)
  return ks