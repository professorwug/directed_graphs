# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"xy_tilt": "02d02 Circles and Swiss roll Datasets.ipynb",
         "directed_circle": "02d02 Circles and Swiss roll Datasets.ipynb",
         "plot_directed_2d": "02d02 Circles and Swiss roll Datasets.ipynb",
         "plot_origin_3d": "02d02 Circles and Swiss roll Datasets.ipynb",
         "plot_directed_3d": "02d02 Circles and Swiss roll Datasets.ipynb",
         "directed_prism": "02d02 Circles and Swiss roll Datasets.ipynb",
         "directed_cylinder": "02d02 Circles and Swiss roll Datasets.ipynb",
         "directed_spiral": "02d02 Circles and Swiss roll Datasets.ipynb",
         "directed_swiss_roll": "02d02 Circles and Swiss roll Datasets.ipynb",
         "directed_spiral_uniform": "02d02 Circles and Swiss roll Datasets.ipynb",
         "directed_swiss_roll_uniform": "02d02 Circles and Swiss roll Datasets.ipynb",
         "angle_x": "02d03 Spheres and Donuts with Flow (datasets).ipynb",
         "whirlpool": "02d03 Spheres and Donuts with Flow (datasets).ipynb",
         "rejection_sample_for_torus": "02d03 Spheres and Donuts with Flow (datasets).ipynb",
         "torus_with_flow": "02d03 Spheres and Donuts with Flow (datasets).ipynb",
         "directed_one_variable_function": "02d05 Branch and Clusters.ipynb",
         "directed_sinh_branch": "02d05 Branch and Clusters.ipynb",
         "static_clusters": "02d05 Branch and Clusters.ipynb",
         "GeneralFlowEmbedder": "05a01 Flow_Embedding_with_Implicit_Vectors.ipynb",
         "affinity_from_flow": "05b Flow Embedding with Diffusion.ipynb",
         "affinity_matrix_from_pointset_to_pointset": "05b Flow Embedding with Diffusion.ipynb",
         "GaussianVectorField": "05b Flow Embedding with Diffusion.ipynb",
         "anisotropic_kernel": "05b Flow Embedding with Diffusion.ipynb",
         "FlowArtist": "05b Flow Embedding with Diffusion.ipynb",
         "smoothness_of_vector_field": "05b Flow Embedding with Diffusion.ipynb",
         "DiffusionFlowEmbedder": "05b Flow Embedding with Diffusion.ipynb",
         "affinity_grid_search": "05b03 Testing the Flow-Affinity Matrix.ipynb",
         "compute_grid": "05c Multiscale Diffusion Flow Embedding.ipynb",
         "diffusion_matrix_with_grid_points": "05c Multiscale Diffusion Flow Embedding.ipynb",
         "FeedForwardReLU": "05c Multiscale Diffusion Flow Embedding.ipynb",
         "MultiscaleDiffusionFlowEmbedder": "05c Multiscale Diffusion Flow Embedding.ipynb",
         "kl_divergence_loss": "05c01 Loss functions.ipynb",
         "kld_symmetric_loss": "05c01 Loss functions.ipynb",
         "diffusion_map_loss": "05c01 Loss functions.ipynb",
         "flow_cosine_loss": "05c01 Loss functions.ipynb"}

modules = ["datasets.py",
           "embeddings.py",
           "diffusion_flow_embedding.py",
           "multiscale_flow_embedder.py"]

doc_url = "https://professorwug.github.io/directed_graphs/"

git_url = "https://github.com/professorwug/directed_graphs/tree/master/"

def custom_doc_links(name): return None
